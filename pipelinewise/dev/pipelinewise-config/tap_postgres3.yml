---

# ------------------------------------------------------------------------------
# General Properties
# ------------------------------------------------------------------------------
id: "postgres3"                        # Unique identifier of the tap
name: "Postgres tap3"                  # Name of the tap
type: "tap-postgres"                   # !! THIS SHOULD NOT CHANGE !!
owner: "urmat.zhenaliev@gmail.com"     # Data owner to contact
#send_alert: False                     # Optional: Disable all configured alerts on this tap


# ------------------------------------------------------------------------------
# Source (Tap) - PostgreSQL connection details
# ------------------------------------------------------------------------------
db_conn:
  host: {{ env_var['TAP_POSTGRES3_HOST'] }}           # PostgreSQL host
  port: {{ env_var['TAP_POSTGRES3_PORT'] }}           # PostgreSQL port
  user: "{{ env_var['TAP_POSTGRES3_USER'] }}"         # PostgreSQL user
  password: "{{ env_var['TAP_POSTGRES3_PASSWORD'] }}" # Plain string or vault encrypted
  dbname: "{{ env_var['TAP_POSTGRES3_DB'] }}"         # PostgreSQL database name

  #filter_schemas: "schema1,schema2"   # Optional: Scan only the required schemas
                                       #           to improve the performance of
                                       #           data extraction
  #max_run_seconds                     # Optional: Stop running the tap after certain
                                       #           number of seconds
                                       #           Default: 43200
  #logical_poll_total_seconds:         # Optional: Stop running the tap when no data
                                       #           received from wal after certain number of seconds
                                       #           Default: 10800
  #break_at_end_lsn:                   # Optional: Stop running the tap if the newly received lsn
                                       #           is after the max lsn that was detected when the tap started
                                       #           Default: true
  #ssl: "true"                         # Optional: Using SSL via postgres sslmode 'require' option.
                                       #           If the server does not accept SSL connections or the client
                                       #           certificate is not recognized the connection will fail
  fastsync_parallelism: 1              # Optional: size of multiprocessing pool used by FastSync
                                       #           Min: 1
                                       #           Default: number of CPU cores

# ------------------------------------------------------------------------------
# Destination (Target) - Target properties
# Connection details should be in the relevant target YAML file
# ------------------------------------------------------------------------------
target: "postgres_dwh"                 # ID of the target connector where the data will be loaded
batch_size_rows: 20000                 # Batch size for the stream to optimise load performance
stream_buffer_size: 0                  # In-memory buffer size (MB) between taps and targets for asynchronous data pipes
#batch_wait_limit_seconds: 3600        # Optional: Maximum time to wait for `batch_size_rows`. Available only for snowflake target.


# ------------------------------------------------------------------------------
# Source to target Schema mapping
# ------------------------------------------------------------------------------
schemas:

  ### SOURCE SCHEMA 1: public
  - source_schema: "public"            # Source schema in postgres with tables
    target_schema: "ppw_dev_tap_postgres1"    # Target schema in the destination Data Warehouse
    #target_schema_select_permissions:  # Optional: Grant SELECT on schema and tables that created
    #  - grp_stats

    # List of tables to replicate from Postgres to destination Data Warehouse
    #
    # Please check the Replication Strategies section in the documentation to understand the differences.
    #Â For LOG_BASED replication method you might need to adjust the source mysql/ mariadb configuration.
    tables:

      ### Table with INCREMENTAL replication
      - table_name: "city"
        replication_method: "INCREMENTAL"
        replication_key: "id"

      ### Table with FULL_TABLE replication
      - table_name: "country"
        replication_method: "FULL_TABLE"

      ### Table with no primary key
      - table_name: "no_pk_table"
        replication_method: "FULL_TABLE"

      ### Table with reserved words and columns and special characters
      - table_name: "edgydata"
        replication_method: "INCREMENTAL"
        replication_key: "cid"

      ### Table with reserved word
      - table_name: "order"
        replication_method: "INCREMENTAL"
        replication_key: "id"

      ### Table with space and mixed upper and lowercase characters
      - table_name: "table_with_space and UPPERCase"
        replication_method: "FULL_TABLE"

      ### Table with space and mixed upper and lowercase characters
      - table_name: "table_with_reserved_words"
        replication_method: "FULL_TABLE"

    transformations:

  ### SOURCE SCHEMA 2: public2
  - source_schema: "public2"
    target_schema: "ppw_dev_tap_postgres_public2"

    tables:
      ### Table with FULL_TABLE replication
      - table_name: "wearehere"
        replication_method: "FULL_TABLE"

      ### Table with reserved words and columns and special characters
      - table_name: "public2_edgydata"
        replication_method: "INCREMENTAL"
        replication_key: "cid"

    transformations:
  # You can add as many schemas as you need...
  # Uncommend this if you want replicate tables from multiple schemas
  #- source_schema: "another_schema_in_postgres"
  #  target_schema: "another
