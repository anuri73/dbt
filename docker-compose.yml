version: '3.4'

x-postgres:
  &postgres-common
  image: postgres:12.2-alpine
  networks:
    - dbt
  environment:
    &postgres-common-env
    PGDATA: /data/postgres

x-flyway:
  &flyway-common
  image: flyway/flyway:6.3.1
  command: -locations=filesystem:/flyway/sql -connectRetries=60 migrate
  networks:
    - dbt
  volumes:
    - ./flyway/migrations:/flyway/sql
  environment:
    &flyway-common-env
    FLYWAY_URL: ${POSTGRES1_CONNECTION_URL}
    FLYWAY_USER: ${POSTGRES_USER:-postgres}
    FLYWAY_PASSWORD: ${POSTGRES_PASSWORD:-12345678}
    FLYWAY_BASELINE_ON_MIGRATE: ${BASELINE_ON_MIGRATE:-true}

services:

  tap_postgres1:
    <<: *postgres-common
    container_name: tap_postgres1
    volumes:
      - tap_postgres1:/data/postgres
    environment:
      <<: *postgres-common-env
      POSTGRES_DB: ${TAP_POSTGRES1_DB:-postgres}
      POSTGRES_USER: ${TAP_POSTGRES1_USER:-postgres}
      POSTGRES_PASSWORD: ${TAP_POSTGRES1_PASSWORD:-12345678}
    ports:
      - "${TAP_POSTGRES1_PORT_ON_HOST}:${TAP_POSTGRES1_PORT:-5432}"

  tap_postgres1_flyway1:
    <<: *flyway-common
    environment:
      <<: *flyway-common-env
      FLYWAY_URL: ${TAP_POSTGRES1_CONNECTION_URL}
    depends_on:
      - tap_postgres1

  tap_postgres2:
    <<: *postgres-common
    container_name: tap_postgres2
    volumes:
      - tap_postgres2:/data/postgres
    environment:
      <<: *postgres-common-env
      POSTGRES_DB: ${TAP_POSTGRES2_DB:-postgres}
      POSTGRES_USER: ${TAP_POSTGRES2_USER:-postgres}
      POSTGRES_PASSWORD: ${TAP_POSTGRES2_PASSWORD:-12345678}
    ports:
      - "${TAP_POSTGRES2_PORT_ON_HOST}:${TAP_POSTGRES2_PORT:-5432}"

  tap_postgres2_flyway2:
    <<: *flyway-common
    environment:
      <<: *flyway-common-env
      FLYWAY_URL: ${TAP_POSTGRES2_CONNECTION_URL}
    depends_on:
      - tap_postgres2

  tap_postgres3:
    <<: *postgres-common
    container_name: tap_postgres3
    volumes:
      - tap_postgres3:/data/postgres
    environment:
      <<: *postgres-common-env
      POSTGRES_DB: ${TAP_POSTGRES3_DB:-postgres}
      POSTGRES_USER: ${TAP_POSTGRES3_USER:-postgres}
      POSTGRES_PASSWORD: ${TAP_POSTGRES3_PASSWORD:-12345678}
    ports:
      - "${TAP_POSTGRES3_PORT_ON_HOST}:${TAP_POSTGRES3_PORT:-5432}"

  tap_postgres3_flyway3:
    <<: *flyway-common
    environment:
      <<: *flyway-common-env
      FLYWAY_URL: ${TAP_POSTGRES3_CONNECTION_URL}
    depends_on:
      - tap_postgres3

  tap_postgres4:
    <<: *postgres-common
    container_name: tap_postgres4
    volumes:
      - tap_postgres4:/data/postgres
    environment:
      <<: *postgres-common-env
      POSTGRES_DB: ${TAP_POSTGRES4_DB:-postgres}
      POSTGRES_USER: ${TAP_POSTGRES4_USER:-postgres}
      POSTGRES_PASSWORD: ${TAP_POSTGRES4_PASSWORD:-12345678}
    ports:
      - "${TAP_POSTGRES4_PORT_ON_HOST}:${TAP_POSTGRES4_PORT:-5432}"

  tap_postgres4_flyway4:
    <<: *flyway-common
    environment:
      <<: *flyway-common-env
      FLYWAY_URL: ${TAP_POSTGRES4_CONNECTION_URL}
    depends_on:
      - tap_postgres4

  target_postgres_warehouse:
    <<: *postgres-common
    container_name: target_postgres_warehouse
    volumes:
      - target_postgres_warehouse:/data/postgres
    environment:
      <<: *postgres-common-env
      POSTGRES_DB: ${TARGET_POSTGRES_DB:-postgres}
      POSTGRES_USER: ${TARGET_POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${TARGET_POSTGRES_PASSWORD:-12345678}
    ports:
      - "${TARGET_POSTGRES_PORT_ON_HOST}:${TARGET_POSTGRES_PORT:-5432}"

  pipelinewise:
    build:
      context: pipelinewise
      dockerfile: Dockerfile
    container_name: pipelinewise
    env_file:
      - .env

    volumes:
      # mount pipelinewise source
      - ./pipelinewise/src:/opt/pipelinewise/src
      # mount pipelinewise dev
      - ./pipelinewise/dev:/opt/pipelinewise/dev
      # mount pipelinewise pipe configuration directory to host for ease of troubleshooting
      - ./pipelinewise/.pipelinewise:/root/.pipelinewise
      # don't create container specific .virtualenvs files on host
      - /opt/pipelinewise/dev/.virtualenvs/

    depends_on:
      - tap_postgres1
      - tap_postgres2
      - tap_postgres3
      - tap_postgres4
      - target_postgres_warehouse
    networks:
      - dbt

  clickhouse:
    image: yandex/clickhouse-server
    container_name: clickhouse
    ports:
      - "${CLICKHOUSE_PORT_ON_HOST}:${CLICKHOUSE_PORT:-5432}"
    networks:
      - dbt
    volumes:
      - clickhouse:/data/clickhouse

  dbt:
    build:
      context: dbt
      dockerfile: Dockerfile
    container_name: dbt
    env_file:
      - .env
    networks:
      - dbt
    volumes:
      # mount pipelinewise source
      - ./dbt/src:/opt/dbt/src
      - ./dbt/dev:/opt/dbt/dev
      - ./dbt/dev/config/profiles.yml:/root/.dbt/profiles.yml
      # don't create container specific .virtualenvs files on host
      - /opt/dbt/dev/.virtualenvs/

networks:
  dbt:
    driver: bridge

volumes:
  tap_postgres1:
  tap_postgres2:
  tap_postgres3:
  tap_postgres4:
  target_postgres_warehouse:
  clickhouse:
